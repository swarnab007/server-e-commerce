name: CI-CD for E-Commerce Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Login to DockerHub using GitHub Secrets
      - name: Login to DockerHub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      # Build the Docker image from the repository
      - name: Build Docker image
        run: docker build -t swarnab/ecommerce-server:latest .

      # Push the built Docker image to DockerHub
      - name: Push to DockerHub
        run: docker push swarnab/ecommerce-server:latest

  deploy:
    runs-on: self-hosted  # Uses a self-hosted runner on AWS EC2

    steps:
      # Stop and remove the existing Docker container if it's running
      - name: Stop and remove old container
        run: |
          if [ "$(docker ps -aq -f name=ecommerce-server)" ]; then
            docker stop ecommerce-server
            docker rm ecommerce-server
          fi

      # Pull the latest Docker image from DockerHub
      - name: Pull latest Docker image
        run: docker pull swarnab/ecommerce-server:latest

      # Run the new Docker container with environment variables from .env file
      - name: Run new Docker container
        run: |
          docker run -d \
            --name ecommerce-server \
            -p 8000:8000 \
            --env-file /home/ubuntu/ecommerce-server/.env \
            swarnab/ecommerce-server:latest
